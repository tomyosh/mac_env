- hosts: localhost
  connection: local
  gather_facts: no
  sudo: no
  vars_files:
    - vars.yml
  vars:
    # dotfiles:
    #   src:
    #     repository: git@github.com:qckanemoto/dotfiles.git
    #     directory: ~
    #   dest: ~/dotfiles
    #   symlink_command: "cd ~/dotfiles ; sh symlink.sh"

    homebrew_taps:
      - caskroom/cask
      - homebrew/php
      - homebrew/apache
      - sanemat/font
      - brona/iproute2mac

    homebrew_packages:
      - { name: ansible }
      - { name: boris }
      - { name: brew-cask }
      - { name: colordiff }
      - { name: composer }
      - { name: coreutils }
      - { name: ffmpeg }
      - { name: git }
      - { name: git-flow }
      - { name: graphviz }
      - { name: htop-osx }
      - { name: httpd22 }   # must be prior to php56
      - { name: hub }
      - { name: iproute2mac }
      - { name: jq }
      - { name: mysql }
      - { name: nkf }
      - { name: node }
      - { name: openssl }
      - { name: osxfuse }
      - { name: packer }
      - { name: php56, install_options: with-homebrew-apxs }
      - { name: php56-intl }
      - { name: php56-opcache }
      - { name: php56-apcu }
      - { name: php56-mcrypt }
      - { name: php56-xdebug }
      - { name: php56-xhprof }
      - { name: phpunit }
      - { name: python }
      - { name: reattach-to-user-namespace }
      - { name: rename }
      - { name: sl }
      - { name: sqlite }
      - { name: ssh-copy-id }
      - { name: sshfs }
      - { name: tig }
      - { name: tmux }
      - { name: tree }
      - { name: unrar }
      - { name: wget }
      - { name: youtube-dl }
      - { name: zsh }
      - { name: zsh-completions }
      - { name: zsh-syntax-highlighting }

    homebrew_cask_packages:
      - alfred
      - appcleaner
      - astah-community
      - atom
      - avast
      - bettertouchtool
      - bartender
      - caffeine
      - clipy
      - codekit
      #- cooviewer
      - dockertoolbox
      - dropbox
      #- eclipse-java
      - evernote
      - firefox-ja
      - flash-player
      - google-chrome
      - google-drive
      - google-japanese-ime
      - gyazo
      - heroku-toolbelt
      - imageoptim
      - iterm2
      - java
      - karabiner
      - kobito
      - libreoffice
      - macdown
      - openoffice
      - phpstorm
      #- reaper
      - sequel-pro
      - slack
      - skitch
      - skype
      - spectacle
      - sublime-text
      - the-unarchiver
      - totalfinder
      - vagrant
      - virtualbox
      - vlc
      - xmind

    npm_packages:
      - { name: bower }
      - { name: coffee-script }
      - { name: grunt }
      - { name: grunt-cli }
      - { name: gulp }
      - { name: karma }
      - { name: less }

  handlers:
    - name: run fc-cache
      shell: fc-cache -vf

  tasks:
    # brew tap
    - name: install taps of homebrew
      homebrew_tap: tap="{{ item }}" state=present
      with_items: homebrew_taps
      tags:
        - brew

    # brew update
    - name: update homebrew
      homebrew: update_homebrew=yes
      tags:
        - brew

    # brew instal
    - name: install homebrew packages
      homebrew: name="{{ item.name }}" state="{{ item.state|default('latest') }}" install_options="{{ item.install_options|default() }}"
      with_items: homebrew_packages
      tags:
        - brew

    # brew cask install
    - name: update brew-cask
      homebrew: name=brew-cask state=latest
    - name: install homebrew cask packages
      homebrew_cask: name="{{ item }}" state=present
      with_items: homebrew_cask_packages

    - name: alfred link


    # npm -g install
    - name: install npm packages
      npm: name="{{ item.name }}" state="{{ item.state|default('latest') }}" version="{{ item.version|default() }}" global=yes
      with_items: npm_packages
      tags:
        - npm

    # install oh-my-zsh
    - name: install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh

    # install Ricty font
    - name: install xquartz
      homebrew_cask: name=xquartz
    - name: install ricty
      homebrew: name=ricty
    - name: copy generated font file
      shell: "cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/"
      args:
        creates: ~/Library/Fonts/Ricty-Bold.ttf
      notify: run fc-cache

    # configure apache
    - name: configure httpd.conf (replace)
      replace: dest=/usr/local/etc/apache2/2.2/httpd.conf regexp="{{ item.regexp }}" replace="{{ item.replace }}"
      with_items:
        - { regexp: '^( *Listen) .*$',                                  replace: '\1 80' }
        - { regexp: '^( *User) .*$',                                    replace: '\1 {{ apache_user }}' }
        - { regexp: '^( *DirectoryIndex) .*$',                          replace: '\1 index.php index.html' }
        - { regexp: '^( *)# *(AddHandler cgi-script .cgi).*$',          replace: '\1\2' }   # just comment in
        - { regexp: '^LoadModule +php5_module +/usr/local/Cellar/.+\n', replace: '' }   # remove the line inserted via `brew install php56 --homebrew-apxs`
    - name: configure httd.conf (insert)
      lineinfile: dest=/usr/local/etc/apache2/2.2/httpd.conf insertafter="{{ item.insertafter }}" line="{{ item.line }}"
      with_items:
        - { insertafter: "LoadModule rewrite_module",         line: "LoadModule php5_module /usr/local/opt/php56/libexec/apache2/libphp5.so" }
        - { insertafter: '^#ServerName ',                     line: "ServerName localhost:80" }
        - { insertafter: '^ *AddType ',                       line: "    AddType application/x-httpd-php .php" }
        - { insertafter: '^ *# *Include .+httpd-vhosts.conf', line: "Include /usr/local/etc/apache2/2.2/extra/httpd-vhosts.my.conf" }
    - name: create httpd-vhosts.conf
      copy: src=templates/httpd-vhosts.my.conf dest=/usr/local/etc/apache2/2.2/extra/httpd-vhosts.my.conf
      args:
        force: no

    # configure php
    - name: configure php.ini
      replace: dest=/usr/local/etc/php/5.6/php.ini regexp="{{ item.regexp }}" replace="{{ item.replace }}"
      with_items:
        - { regexp: '^;?(max_execution_time) *=.*$',            replace: '\1 = 0' }
        - { regexp: '^;?(max_input_time) *=.*$',                replace: '\1 = -1' }
        - { regexp: '^;?(memory_limit) *=.*$',                  replace: '\1 = 512M' }
        - { regexp: '^;?(date.timezone) *=.*$',                 replace: '\1 = Asia/Tokyo' }
        - { regexp: '^;?(mbstring.language) *=.*$',             replace: '\1 = Japanese' }
        - { regexp: '^;?(mysql.default_socket) *=.*$',          replace: '\1 = /private/tmp/mysql.sock' }
        - { regexp: '^;?(pdo_mysql.default_socket) *=.*$',      replace: '\1 = /private/tmp/mysql.sock' }
        - { regexp: '^;?(zend_extension *= *opcache.so)',       replace: ';\1' }   # just comment out
        - { regexp: '^;?(always_populate_raw_post_data) *=.*$', replace: '\1 = -1' }   # tentative for php56

    # configure xdebug
    - name: configure ext-xdebug.ini
      copy: src=templates/ext-xdebug.my.ini dest=/usr/local/etc/php/5.6/conf.d/ext-xdebug.my.ini

    # configure xhprof
    - name: make xhprod dir in DocumentRoot
      file: dest=/usr/local/var/www/htdocs/xhprof state=directory
    - name: symlink xhprof into DocumentRoot
      file: src="{{ item.src }}" dest="{{ item.dest }}" state=link
      with_items:
        - { src: /usr/local/opt/php56-xhprof/xhprof_html, dest: /usr/local/var/www/htdocs/xhprof/xhprof_html }
        - { src: /usr/local/opt/php56-xhprof/xhprof_lib, dest: /usr/local/var/www/htdocs/xhprof/xhprof_lib }
    - name: put a snippet file into xhprof dir
      copy: src=templates/xhprof.snippet dest=/usr/local/var/www/htdocs/xhprof/xhprof.snippet

    # install dotfiles
    # - name: git clone dotfiles
    #   git: repo="{{ dotfiles.src.repository }}" dest="{{ dotfiles.dest }}"
    #   register: ret1
    #   when: dotfiles.src.repository
    # - name: copy dotfiles
    #   copy: src="{{ dotfiles.src.directory }}" dest="{{ dotfiles.dest }}"
    #   register: ret2
    #   when: dotfiles.src.directory
    # - name: symlink dotfiles
    #   shell: "{{ dotfiles.symlink_command }}"
    #   when: ret1|changed or ret2|changed
